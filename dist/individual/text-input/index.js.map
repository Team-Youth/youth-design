{"version":3,"sources":["../../../src/tokens/colors.ts","../../../src/tokens/typography.ts","../../../src/tokens/spacing.ts","../../../src/tokens/radius.ts","../../../src/tokens/shadows.ts","../../../src/tokens/borders.ts","../../../src/tokens/index.ts","../../../src/components/text-input/TextInput.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Color Design Tokens\n * 브랜드 아이덴티티와 UI 의미 전달을 위한 컬러 시스템\n */\n\n// All colors export\nexport const colors = {\n  primary: {\n    /** 브랜드 아이덴티티를 대표하는 메인 컬러 */\n    mainviolet: '#7248D9',\n\n    /** 중립적인 컬러 - Typography 및 넓은 영역 Fill에 사용 */\n    gray: {\n      900: '#171717',\n      800: '#292929',\n      700: '#595959',\n      600: '#7A7A7A',\n      500: '#999999',\n      400: '#B8B8B8',\n      300: '#D6D6D6',\n      200: '#EBEBEB',\n      100: '#F5F5F5',\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n\n    /** 넓은 영역에서 Fill로 사용 가능한 중립 색상 계열 */\n    coolGray: {\n      900: '#151719',\n      800: '#25282D',\n      700: '#393F46',\n      600: '#505862',\n      500: '#6E7887',\n      400: '#8D97A5',\n      300: '#AFB6C0',\n      200: '#D1D5DB',\n      100: '#E8EAED',\n      50: '#F3F5F6',\n    },\n\n    /** 메인 컬러보다는 덜 강조되지만, 일러스트 및 보조 정보 강조에 사용 */\n    tint: {\n      violet: {\n        700: '#4B1FA3',\n        600: '#5B27C4',\n        500: '#7248D9',\n        400: '#8B6EE4',\n        300: '#A88FEA',\n        200: '#C8B7F4',\n        100: '#E5DEF9',\n        50: '#F8F4FE',\n      },\n      blue: {\n        700: '#0038B8',\n        600: '#004AF5',\n        500: '#2F6EFF',\n        400: '#5C92FF',\n        300: '#8FB4FF',\n        200: '#C2D6FF',\n        100: '#E0EBFF',\n        50: '#F0F5FF',\n      },\n      red: {\n        700: '#C70000',\n        600: '#E51A1A',\n        500: '#FF2E2E',\n        400: '#FF6666',\n        300: '#FF9494',\n        200: '#FFC2C2',\n        100: '#FFE0E0',\n        50: '#FFF0F0',\n      },\n      yellow: {\n        700: '#F59B00',\n        600: '#FFB200',\n        500: '#FFCC00',\n        400: '#FFDA47',\n        300: '#FFE785',\n        200: '#FFF1B8',\n        100: '#FFF7D6',\n        50: '#FFFAE5',\n      },\n      green: {\n        700: '#00996B',\n        600: '#00AD74',\n        500: '#00C785',\n        400: '#55DD99',\n        300: '#88E7B8',\n        200: '#BBF2D2',\n        100: '#DDF8E6',\n        50: '#F0FFF5',\n      },\n    },\n  },\n\n  /** 텍스트, 상태, 배경, 보더, 비활성, Dim 등 UI 의미 전달용 컬러셋 */\n  semantic: {\n    text: {\n      /** 콘텐츠에서 가장 중요한 정보를 전달할 때 사용 */\n      primary: '#25282D',\n      /** 주요 정보 외의 부가적인 내용을 전달할 때 사용 */\n      secondary: '#505862',\n      /** 시각적 우선순위가 낮은 텍스트에 사용 */\n      tertiary: '#8D97A5',\n      /** 상호작용이 불가능하거나 비활성화된 상태의 텍스트에 사용 */\n      disabled: '#D1D5DB',\n      /** 어두운 배경 위에 사용되는 밝은 텍스트 컬러 */\n      inverse: '#FFFFFF',\n    },\n    state: {\n      /** 작업 완료, 저장 성공 등 긍정적인 상태를 나타냄 */\n      success: '#00C785',\n      /** 주의가 필요한 상황이나 경고 메시지를 전달할 때 사용 */\n      warning: '#FFCC00',\n      /** 오류 상태나 실패 메시지를 표시할 때 사용 */\n      error: '#FF2E2E',\n      /** 보조적인 정보나 안내 메시지를 전달할 때 사용 */\n      info: '#2F6EFF',\n    },\n    background: {\n      /** 기본 페이지 또는 레이아웃의 배경으로 사용 */\n      primary: '#FFFFFF',\n      /** Primary 배경과 대비를 주어 시각적 계층을 형성할 때 사용 */\n      secondary: '#E8EAED',\n    },\n    border: {\n      /** 강조보다는 미묘한 구분을 목적으로 하며, 디바이더 역할까지 겸함 */\n      default: '#EBEBEB',\n      /** 콘텐츠 간의 명확한 구획이 필요할 때 사용하는 보더 컬러 */\n      strong: '#D6D6D6',\n    },\n    disabled: {\n      /** 텍스트 또는 아이콘이 비활성 상태임을 나타낼 때 사용 */\n      foreground: '#D1D5DB',\n      /** 버튼, 입력 필드 등 UI가 비활성화된 배경으로 사용 */\n      background: '#F3F5F6',\n    },\n    dim: {\n      /** 모달, 드롭다운 등 레이어 위에 표시되는 오버레이 배경 */\n      overlay: '#000000B3',\n    },\n  },\n\n  /** 의료 플랫폼 특성을 반영해 피부, 머리카락, 장기 표현용 컬러 */\n  illustration: {\n    skin: {\n      /** 피부 표현 시 밝은 톤으로 사용 */\n      light: '#FFEBE1',\n      /** 피부 기본 톤을 표현할 때 사용 */\n      base: '#FFDAC4',\n      /** 피부 음영 표현용 컬러 */\n      shadow: '#FFCBB7',\n      /** 피부 깊은 음영이나 입체감을 줄 때 사용 */\n      deepshadow: '#F8B29C',\n    },\n    hair: {\n      /** 머리카락 하이라이트 표현용 컬러 */\n      light: '#706965',\n      /** 머리카락 기본 색상을 표현할 때 사용 */\n      base: '#37322F',\n      /** 머리카락 음영 및 입체감 표현용 컬러 */\n      shadow: '#1A1716',\n    },\n    organ: {\n      /** 긍정적 상태나 특정 장기 강조용 컬러 */\n      light: '#FFB5B5',\n      /** 장기 표현 시 기본 색상으로 사용 */\n      base: '#FF8F8F',\n      /** 장기 음영 표현용 컬러 */\n      shadow: '#FB7474',\n      /** 장기 깊은 음영이나 강조를 위해 사용 */\n      deepshadow: '#CD5151',\n    },\n  },\n} as const;\n\n// Type definitions\nexport type ColorTokens = typeof colors;\nexport type PrimaryColors = typeof colors.primary;\nexport type SemanticColors = typeof colors.semantic;\nexport type IllustrationColors = typeof colors.illustration;\n\n// 하위 호환성을 위한 개별 export (deprecated)\n/** @deprecated colors.primary 사용을 권장합니다 */\nexport const primary = colors.primary.mainviolet;\n\n/** @deprecated colors.primary.gray 사용을 권장합니다 */\nexport const gray = colors.primary.gray;\n\n/** @deprecated colors.primary.coolGray 사용을 권장합니다 */\nexport const coolGray = colors.primary.coolGray;\n\n/** @deprecated colors.primary.tint 사용을 권장합니다 */\nexport const tint = colors.primary.tint;\n\n/** @deprecated colors.semantic 사용을 권장합니다 */\nexport const semantic = colors.semantic;\n\n/** @deprecated colors.illustration 사용을 권장합니다 */\nexport const illustration = colors.illustration;\n","/**\n * Typography Design Tokens\n * 서비스와 사용자가 커뮤니케이션하는 주요 요소\n */\n\n// Font Family\nexport const fontFamily = {\n  /** 웹사이트에 사용되는 모든 폰트는 Pretendard를 기반으로 함 */\n  primary: 'Pretendard',\n} as const;\n\n// Font Sizes (rem 단위로 반응형 지원)\nexport const fontSize = {\n  xxxxl: '2rem', // 32px\n  xxxl: '1.75rem', // 28px\n  xxl: '1.5rem', // 24px\n  xl: '1.25rem', // 20px\n  l: '1.125rem', // 18px\n  m: '1rem', // 16px\n  s: '0.875rem', // 14px\n  xs: '0.75rem', // 12px\n  xxs: '0.625rem', // 10px\n  xxxs: '0.688rem', // 11px\n} as const;\n\n// Font Weights\nexport const fontWeight = {\n  bold: 700,\n  semibold: 600,\n  medium: 500,\n  regular: 400,\n} as const;\n\n// Line Heights\nexport const lineHeight = {\n  xxxxl: '42px',\n  xxxl: '36px',\n  xxl: '32px',\n  xl: '28px',\n  l: '24px',\n  m: '24px',\n  s: '22px',\n  xs: '20px',\n  xxs: '18px',\n  xxxs: '17px',\n} as const;\n\n// Letter Spacings\nexport const letterSpacing = {\n  m: '0',\n  s: '-1%',\n  xs: '-2%',\n} as const;\n\n// Text Styles (React.CSSProperties 호환)\nexport const textStyles = {\n  /** 주목도를 높이고 큰 타이틀 영역 강조에 사용 */\n  display1: {\n    fontSize: fontSize.xxxxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxxxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 중간 크기 타이틀에 사용 */\n  display2: {\n    fontSize: fontSize.xxxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 정보성 카드 타이틀에 주로 사용 */\n  heading1: {\n    fontSize: fontSize.xxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 섹션 구분 타이틀 등에 사용 */\n  heading2: {\n    fontSize: fontSize.xl,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.xl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 소제목 등에 사용 */\n  heading3: {\n    fontSize: fontSize.l,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.l,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 리스트 아이템, 버튼 텍스트 등에 사용 */\n  heading4: {\n    fontSize: fontSize.m,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.m,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 부가 정보, 캡션 등에 사용 */\n  heading5: {\n    fontSize: fontSize.s,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.s,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 주요 본문 텍스트에 사용 */\n  body1: {\n    fontSize: fontSize.m,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.l,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 보조 본문 텍스트에 사용 */\n  body2: {\n    fontSize: fontSize.s,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.s,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 본문 보조, 하위 위계 텍스트 쓰임새로 사용 권장 */\n  body3: {\n    fontSize: fontSize.xs,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.xxs,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 보조 정보나 컴포넌트 레벨에서 사용 */\n  caption: {\n    fontSize: fontSize.xs,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.xs,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n} as const;\n\n// All typography export\nexport const typography = {\n  fontFamily,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  letterSpacing,\n  textStyles,\n} as const;\n\nexport default typography;\n","/**\n * Spacing Design Tokens\n * 균일한 요소와 간격을 사용하여 UI의 체계적인 배열을 도와줌\n * 4와 8의 배수에 기반한 스페이싱 시스템\n */\n\nexport const spacing = {\n  /** 2px - 최소 간격 */\n  xxxs: '2px',\n  /** 4px - 매우 작은 간격 */\n  xxs: '4px',\n  /** 8px - 작은 간격 */\n  xs: '8px',\n  /** 12px - 작은-중간 간격 */\n  s: '12px',\n  /** 16px - 기본 간격 */\n  m: '16px',\n  /** 20px - 중간-큰 간격 */\n  l: '20px',\n  /** 24px - 큰 간격 */\n  xl: '24px',\n  /** 32px - 매우 큰 간격 */\n  xxl: '32px',\n  /** 40px - 최대 간격 */\n  xxxl: '40px',\n} as const;\n\nexport type SpacingTokens = typeof spacing;\n\nexport default spacing;\n","/**\n * Radius Design Tokens\n * UI 요소의 모서리를 둥글게 하여 부드러운 사용자 경험을 제공\n */\n\nexport const radius = {\n  /** 작은 버튼, 입력 필드, 체크박스에 최소한의 둥근 효과를 줄 때 사용 */\n  xs: '4px',\n  /** 카드, 드롭다운, 배너, 일반 버튼에 기본적인 둥근 스타일을 적용할 때 사용 */\n  s: '8px',\n  /** 중간 크기의 카드, 팝업, 모달에 부드러운 곡률을 적용할 때 사용 */\n  m: '12px',\n  /** 큰 모달, 프로필 이미지, 강조 영역에 둥근 효과를 줄 때 사용 */\n  l: '16px',\n  /** Hero Section과 같은 대형 UI 요소에 강한 둥근 효과를 적용할 때 사용 */\n  xl: '20px',\n  /** 아바타, 토글 버튼과 같은 완전한 원형 요소에 적용할 때 사용 */\n  full: '50%',\n} as const;\n\nexport type RadiusTokens = typeof radius;\n\nexport default radius;\n","/**\n * Shadow Design Tokens\n * 그림자는 적용된 UI의 높이(elevation)와 이동 방향, 가장자리 등에 대한 단서를 제공\n */\n\nexport const shadows = {\n  /** 높이 48px 이하의 작은 요소에 가벼운 깊이감을 줄 때 사용 - 아이콘, 버튼, 배지, 입력 필드, 체크박스 등 */\n  s: '0px 1px 8px rgba(0, 0, 0, 0.1)',\n  /** 너비 또는 높이가 48px ~ 200px 사이의 중간 크기 요소를 명확히 구분할 때 사용 - 카드, 모달, 드롭다운, 중간 크기 버튼 등 */\n  m: '0px 1px 16px rgba(0, 0, 0, 0.1)',\n  /** 너비 200px 이상 또는 화면 너비의 50% 이상을 초과하는 큰 요소, 또는 강조가 필요한 구성 요소에 사용 - 다이얼로그, 대형 카드 등 */\n  l: '0px 1px 24px rgba(0, 0, 0, 0.12)',\n} as const;\n\nexport type ShadowTokens = typeof shadows;\n\nexport default shadows;\n","/**\n * Border Design Tokens\n * 컴포넌트에 테두리를 추가하여 구분감을 제공하는 속성\n */\n\n// Border Widths\nexport const borderWidth = {\n  /** UI 요소의 기본적인 구분감을 제공할 때 사용 */\n  s: '1px',\n  /** 1px보다 더 명확한 구분이 필요할 때 사용 */\n  m: '1.5px',\n  /** 중요한 요소를 강조하거나, 요소 간 강한 대비가 필요할 때 사용 */\n  l: '2px',\n} as const;\n\n// Border Styles\nexport const borderStyle = {\n  solid: 'solid',\n  dashed: 'dashed',\n  dotted: 'dotted',\n  none: 'none',\n} as const;\n\n// Combined Border Tokens\nexport const border = {\n  /** 기본 보더 - UI 요소의 기본적인 구분감 제공 */\n  s: `${borderWidth.s} ${borderStyle.solid}`,\n  /** 중간 보더 - 더 명확한 구분이 필요할 때 */\n  m: `${borderWidth.m} ${borderStyle.solid}`,\n  /** 큰 보더 - 중요한 요소 강조나 강한 대비가 필요할 때 */\n  l: `${borderWidth.l} ${borderStyle.solid}`,\n  /** 보더 없음 */\n  none: borderStyle.none,\n} as const;\n\n// All borders export\nexport const borders = {\n  borderWidth,\n  borderStyle,\n  border,\n} as const;\n\nexport default borders;\n","/**\n * Design Tokens Entry Point\n * 모든 디자인 토큰을 중앙에서 관리합니다\n */\n\n// Individual token exports\nexport { colors, primary, gray, coolGray, tint, semantic, illustration } from './colors';\nexport {\n  typography,\n  fontFamily,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  letterSpacing,\n  textStyles,\n} from './typography';\nexport { spacing } from './spacing';\nexport { radius } from './radius';\nexport { shadows } from './shadows';\nexport { borders } from './borders';\n\n// Combined tokens export\nexport const tokens = {\n  colors: () => import('./colors'),\n  typography: () => import('./typography'),\n  spacing: () => import('./spacing'),\n  radius: () => import('./radius'),\n  shadows: () => import('./shadows'),\n  borders: () => import('./borders'),\n} as const;\n\n// Re-export everything as default\nexport default {\n  colors: () => import('./colors'),\n  typography: () => import('./typography'),\n  spacing: () => import('./spacing'),\n  radius: () => import('./radius'),\n  shadows: () => import('./shadows'),\n  borders: () => import('./borders'),\n};\n","import React, { useState, forwardRef } from 'react';\nimport { textStyles, fontWeight } from '../../tokens';\nimport { colors } from '../../tokens/colors';\nimport { border } from '../../tokens/borders';\nimport './TextInput.css';\n\nexport interface TextInputProps\n  extends Omit<React.InputHTMLAttributes<HTMLInputElement>, 'size' | 'onChange'> {\n  placeholder?: string;\n  value?: string;\n  defaultValue?: string;\n  onChange?: (value: string) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  disabled?: boolean;\n  error?: boolean;\n  errorMessage?: string;\n  className?: string;\n  type?: 'text' | 'password' | 'email' | 'number';\n  size?: 'l' | 'm' | 's';\n}\n\nexport const TextInput = forwardRef<HTMLInputElement, TextInputProps>(\n  (\n    {\n      placeholder = 'Placeholder',\n      value,\n      defaultValue,\n      onChange,\n      onFocus,\n      onBlur,\n      disabled = false,\n      error = false,\n      errorMessage,\n      className = '',\n      type = 'text',\n      size = 'l',\n      ...restProps\n    },\n    ref,\n  ) => {\n    const [isFocused, setIsFocused] = useState(false);\n    const [internalValue, setInternalValue] = useState(defaultValue || '');\n\n    // Size configurations\n    const sizeConfig = {\n      l: {\n        paddingX: '16px',\n        paddingY: '12px',\n        borderRadius: '12px',\n        height: '48px',\n        ...textStyles.body1,\n        fontWeight: fontWeight.regular,\n      },\n      m: {\n        paddingX: '12px',\n        paddingY: '8px',\n        borderRadius: '8px',\n        height: '40px',\n        ...textStyles.body2,\n        fontWeight: fontWeight.regular,\n      },\n      s: {\n        paddingX: '8px',\n        paddingY: '6px',\n        borderRadius: '4px',\n        height: '32px',\n        ...textStyles.body3,\n        fontWeight: fontWeight.regular,\n      },\n    };\n\n    const getStyles = (): React.CSSProperties => {\n      const config = sizeConfig[size];\n      let styles: React.CSSProperties = {\n        width: '100%',\n        height: config.height,\n        padding: `${config.paddingY} ${config.paddingX}`,\n        borderRadius: config.borderRadius,\n        fontSize: config.fontSize,\n        fontWeight: config.fontWeight,\n        lineHeight: config.lineHeight,\n        border: `${border.s} transparent`,\n        outline: 'none',\n        transition: 'all 0.2s ease',\n        fontFamily: 'inherit',\n      };\n\n      if (disabled) {\n        styles = {\n          ...styles,\n          backgroundColor: colors.semantic.disabled.background,\n          color: colors.semantic.disabled.foreground,\n          border: `${border.s} ${colors.semantic.disabled.background}`,\n          cursor: 'not-allowed',\n        };\n      } else if (error) {\n        styles = {\n          ...styles,\n          backgroundColor: colors.semantic.background.primary,\n          color: colors.semantic.text.primary,\n          border: `${border.s} ${colors.semantic.state.error}`,\n        };\n      } else if (isFocused) {\n        styles = {\n          ...styles,\n          backgroundColor: colors.semantic.background.primary,\n          color: colors.semantic.text.primary,\n          border: `${border.s} ${colors.primary.mainviolet}`,\n          boxShadow: `0 0 0 3px ${colors.primary.tint.violet[100]}`,\n        };\n      } else {\n        styles = {\n          ...styles,\n          backgroundColor: colors.semantic.background.primary,\n          color: colors.semantic.text.primary,\n          border: `${border.s} ${colors.semantic.border.default}`,\n        };\n      }\n\n      return styles;\n    };\n\n    const getPlaceholderStyles = (): React.CSSProperties => {\n      return {\n        color: colors.semantic.text.tertiary,\n      };\n    };\n\n    const handleFocus = () => {\n      if (!disabled) {\n        setIsFocused(true);\n        onFocus?.();\n      }\n    };\n\n    const handleBlur = () => {\n      setIsFocused(false);\n      onBlur?.();\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n      const newValue = e.target.value;\n      if (value === undefined) {\n        setInternalValue(newValue);\n      }\n      onChange?.(newValue);\n    };\n\n    const inputValue = value !== undefined ? value : internalValue;\n\n    return (\n      <div className={`text-input-container ${className}`}>\n        <input\n          ref={ref}\n          type={type}\n          value={inputValue}\n          placeholder={placeholder}\n          onChange={handleChange}\n          onFocus={handleFocus}\n          onBlur={handleBlur}\n          disabled={disabled}\n          style={getStyles()}\n          className=\"text-input\"\n          {...restProps}\n        />\n        {error && errorMessage && (\n          <div\n            style={{\n              marginTop: '4px',\n              fontSize: '12px',\n              color: colors.semantic.state.error,\n              fontWeight: fontWeight.regular,\n            }}\n            className=\"error-message\"\n          >\n            {errorMessage}\n          </div>\n        )}\n      </div>\n    );\n  },\n);\n\nTextInput.displayName = 'TextInput';\n"]}