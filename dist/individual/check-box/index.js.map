{"version":3,"sources":["../../../src/tokens/colors.ts","../../../src/tokens/typography.ts","../../../src/tokens/spacing.ts","../../../src/tokens/radius.ts","../../../src/tokens/shadows.ts","../../../src/tokens/borders.ts","../../../src/tokens/index.ts","../../../src/components/check-box/Checkbox.tsx"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Color Design Tokens\n * 브랜드 아이덴티티와 UI 의미 전달을 위한 컬러 시스템\n */\n\n// All colors export\nexport const colors = {\n  primary: {\n    /** 브랜드 아이덴티티를 대표하는 메인 컬러 */\n    mainviolet: '#7248D9',\n\n    /** 중립적인 컬러 - Typography 및 넓은 영역 Fill에 사용 */\n    gray: {\n      900: '#171717',\n      800: '#292929',\n      700: '#595959',\n      600: '#7A7A7A',\n      500: '#999999',\n      400: '#B8B8B8',\n      300: '#D6D6D6',\n      200: '#EBEBEB',\n      100: '#F5F5F5',\n      black: '#000000',\n      white: '#FFFFFF',\n    },\n\n    /** 넓은 영역에서 Fill로 사용 가능한 중립 색상 계열 */\n    coolGray: {\n      900: '#151719',\n      800: '#25282D',\n      700: '#393F46',\n      600: '#505862',\n      500: '#6E7887',\n      400: '#8D97A5',\n      300: '#AFB6C0',\n      200: '#D1D5DB',\n      100: '#E8EAED',\n      50: '#F3F5F6',\n    },\n\n    /** 메인 컬러보다는 덜 강조되지만, 일러스트 및 보조 정보 강조에 사용 */\n    tint: {\n      violet: {\n        700: '#4B1FA3',\n        600: '#5B27C4',\n        500: '#7248D9',\n        400: '#8B6EE4',\n        300: '#A88FEA',\n        200: '#C8B7F4',\n        100: '#E5DEF9',\n        50: '#F8F4FE',\n      },\n      blue: {\n        700: '#0038B8',\n        600: '#004AF5',\n        500: '#2F6EFF',\n        400: '#5C92FF',\n        300: '#8FB4FF',\n        200: '#C2D6FF',\n        100: '#E0EBFF',\n        50: '#F0F5FF',\n      },\n      red: {\n        700: '#C70000',\n        600: '#E51A1A',\n        500: '#FF2E2E',\n        400: '#FF6666',\n        300: '#FF9494',\n        200: '#FFC2C2',\n        100: '#FFE0E0',\n        50: '#FFF0F0',\n      },\n      yellow: {\n        700: '#F59B00',\n        600: '#FFB200',\n        500: '#FFCC00',\n        400: '#FFDA47',\n        300: '#FFE785',\n        200: '#FFF1B8',\n        100: '#FFF7D6',\n        50: '#FFFAE5',\n      },\n      green: {\n        700: '#00996B',\n        600: '#00AD74',\n        500: '#00C785',\n        400: '#55DD99',\n        300: '#88E7B8',\n        200: '#BBF2D2',\n        100: '#DDF8E6',\n        50: '#F0FFF5',\n      },\n    },\n  },\n\n  /** 텍스트, 상태, 배경, 보더, 비활성, Dim 등 UI 의미 전달용 컬러셋 */\n  semantic: {\n    text: {\n      /** 콘텐츠에서 가장 중요한 정보를 전달할 때 사용 */\n      primary: '#25282D',\n      /** 주요 정보 외의 부가적인 내용을 전달할 때 사용 */\n      secondary: '#505862',\n      /** 시각적 우선순위가 낮은 텍스트에 사용 */\n      tertiary: '#8D97A5',\n      /** 상호작용이 불가능하거나 비활성화된 상태의 텍스트에 사용 */\n      disabled: '#D1D5DB',\n      /** 어두운 배경 위에 사용되는 밝은 텍스트 컬러 */\n      inverse: '#FFFFFF',\n    },\n    state: {\n      /** 작업 완료, 저장 성공 등 긍정적인 상태를 나타냄 */\n      success: '#00C785',\n      /** 주의가 필요한 상황이나 경고 메시지를 전달할 때 사용 */\n      warning: '#FFCC00',\n      /** 오류 상태나 실패 메시지를 표시할 때 사용 */\n      error: '#FF2E2E',\n      /** 보조적인 정보나 안내 메시지를 전달할 때 사용 */\n      info: '#2F6EFF',\n    },\n    background: {\n      /** 기본 페이지 또는 레이아웃의 배경으로 사용 */\n      primary: '#FFFFFF',\n      /** Primary 배경과 대비를 주어 시각적 계층을 형성할 때 사용 */\n      secondary: '#E8EAED',\n    },\n    border: {\n      /** 강조보다는 미묘한 구분을 목적으로 하며, 디바이더 역할까지 겸함 */\n      default: '#EBEBEB',\n      /** 콘텐츠 간의 명확한 구획이 필요할 때 사용하는 보더 컬러 */\n      strong: '#D6D6D6',\n    },\n    disabled: {\n      /** 텍스트 또는 아이콘이 비활성 상태임을 나타낼 때 사용 */\n      foreground: '#D1D5DB',\n      /** 버튼, 입력 필드 등 UI가 비활성화된 배경으로 사용 */\n      background: '#F3F5F6',\n    },\n    dim: {\n      /** 모달, 드롭다운 등 레이어 위에 표시되는 오버레이 배경 */\n      overlay: '#000000B3',\n    },\n  },\n\n  /** 의료 플랫폼 특성을 반영해 피부, 머리카락, 장기 표현용 컬러 */\n  illustration: {\n    skin: {\n      /** 피부 표현 시 밝은 톤으로 사용 */\n      light: '#FFEBE1',\n      /** 피부 기본 톤을 표현할 때 사용 */\n      base: '#FFDAC4',\n      /** 피부 음영 표현용 컬러 */\n      shadow: '#FFCBB7',\n      /** 피부 깊은 음영이나 입체감을 줄 때 사용 */\n      deepshadow: '#F8B29C',\n    },\n    hair: {\n      /** 머리카락 하이라이트 표현용 컬러 */\n      light: '#706965',\n      /** 머리카락 기본 색상을 표현할 때 사용 */\n      base: '#37322F',\n      /** 머리카락 음영 및 입체감 표현용 컬러 */\n      shadow: '#1A1716',\n    },\n    organ: {\n      /** 긍정적 상태나 특정 장기 강조용 컬러 */\n      light: '#FFB5B5',\n      /** 장기 표현 시 기본 색상으로 사용 */\n      base: '#FF8F8F',\n      /** 장기 음영 표현용 컬러 */\n      shadow: '#FB7474',\n      /** 장기 깊은 음영이나 강조를 위해 사용 */\n      deepshadow: '#CD5151',\n    },\n  },\n} as const;\n\n// Type definitions\nexport type ColorTokens = typeof colors;\nexport type PrimaryColors = typeof colors.primary;\nexport type SemanticColors = typeof colors.semantic;\nexport type IllustrationColors = typeof colors.illustration;\n\n// 하위 호환성을 위한 개별 export (deprecated)\n/** @deprecated colors.primary 사용을 권장합니다 */\nexport const primary = colors.primary.mainviolet;\n\n/** @deprecated colors.primary.gray 사용을 권장합니다 */\nexport const gray = colors.primary.gray;\n\n/** @deprecated colors.primary.coolGray 사용을 권장합니다 */\nexport const coolGray = colors.primary.coolGray;\n\n/** @deprecated colors.primary.tint 사용을 권장합니다 */\nexport const tint = colors.primary.tint;\n\n/** @deprecated colors.semantic 사용을 권장합니다 */\nexport const semantic = colors.semantic;\n\n/** @deprecated colors.illustration 사용을 권장합니다 */\nexport const illustration = colors.illustration;\n","/**\n * Typography Design Tokens\n * 서비스와 사용자가 커뮤니케이션하는 주요 요소\n */\n\n// Font Family\nexport const fontFamily = {\n  /** 웹사이트에 사용되는 모든 폰트는 Pretendard를 기반으로 함 */\n  primary: 'Pretendard',\n} as const;\n\n// Font Sizes (rem 단위로 반응형 지원)\nexport const fontSize = {\n  xxxxl: '2rem', // 32px\n  xxxl: '1.75rem', // 28px\n  xxl: '1.5rem', // 24px\n  xl: '1.25rem', // 20px\n  l: '1.125rem', // 18px\n  m: '1rem', // 16px\n  s: '0.875rem', // 14px\n  xs: '0.75rem', // 12px\n  xxs: '0.625rem', // 10px\n  xxxs: '0.688rem', // 11px\n} as const;\n\n// Font Weights\nexport const fontWeight = {\n  bold: 700,\n  semibold: 600,\n  medium: 500,\n  regular: 400,\n} as const;\n\n// Line Heights\nexport const lineHeight = {\n  xxxxl: '42px',\n  xxxl: '36px',\n  xxl: '32px',\n  xl: '28px',\n  l: '24px',\n  m: '24px',\n  s: '22px',\n  xs: '20px',\n  xxs: '18px',\n  xxxs: '17px',\n} as const;\n\n// Letter Spacings\nexport const letterSpacing = {\n  m: '0',\n  s: '-1%',\n  xs: '-2%',\n} as const;\n\n// Text Styles (React.CSSProperties 호환)\nexport const textStyles = {\n  /** 주목도를 높이고 큰 타이틀 영역 강조에 사용 */\n  display1: {\n    fontSize: fontSize.xxxxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxxxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 중간 크기 타이틀에 사용 */\n  display2: {\n    fontSize: fontSize.xxxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 정보성 카드 타이틀에 주로 사용 */\n  heading1: {\n    fontSize: fontSize.xxl,\n    fontWeight: fontWeight.bold,\n    lineHeight: lineHeight.xxl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 섹션 구분 타이틀 등에 사용 */\n  heading2: {\n    fontSize: fontSize.xl,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.xl,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 소제목 등에 사용 */\n  heading3: {\n    fontSize: fontSize.l,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.l,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 리스트 아이템, 버튼 텍스트 등에 사용 */\n  heading4: {\n    fontSize: fontSize.m,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.m,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 부가 정보, 캡션 등에 사용 */\n  heading5: {\n    fontSize: fontSize.s,\n    fontWeight: fontWeight.semibold,\n    lineHeight: lineHeight.s,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 주요 본문 텍스트에 사용 */\n  body1: {\n    fontSize: fontSize.m,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.l,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 보조 본문 텍스트에 사용 */\n  body2: {\n    fontSize: fontSize.s,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.s,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 본문 보조, 하위 위계 텍스트 쓰임새로 사용 권장 */\n  body3: {\n    fontSize: fontSize.xs,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.xxs,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n  /** 보조 정보나 컴포넌트 레벨에서 사용 */\n  caption: {\n    fontSize: fontSize.xs,\n    fontWeight: fontWeight.regular,\n    lineHeight: lineHeight.xs,\n    letterSpacing: letterSpacing.m,\n    fontFamily: fontFamily.primary,\n  },\n} as const;\n\n// All typography export\nexport const typography = {\n  fontFamily,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  letterSpacing,\n  textStyles,\n} as const;\n\nexport default typography;\n","/**\n * Spacing Design Tokens\n * 균일한 요소와 간격을 사용하여 UI의 체계적인 배열을 도와줌\n * 4와 8의 배수에 기반한 스페이싱 시스템\n */\n\nexport const spacing = {\n  /** 2px - 최소 간격 */\n  xxxs: '2px',\n  /** 4px - 매우 작은 간격 */\n  xxs: '4px',\n  /** 8px - 작은 간격 */\n  xs: '8px',\n  /** 12px - 작은-중간 간격 */\n  s: '12px',\n  /** 16px - 기본 간격 */\n  m: '16px',\n  /** 20px - 중간-큰 간격 */\n  l: '20px',\n  /** 24px - 큰 간격 */\n  xl: '24px',\n  /** 32px - 매우 큰 간격 */\n  xxl: '32px',\n  /** 40px - 최대 간격 */\n  xxxl: '40px',\n} as const;\n\nexport type SpacingTokens = typeof spacing;\n\nexport default spacing;\n","/**\n * Radius Design Tokens\n * UI 요소의 모서리를 둥글게 하여 부드러운 사용자 경험을 제공\n */\n\nexport const radius = {\n  /** 작은 버튼, 입력 필드, 체크박스에 최소한의 둥근 효과를 줄 때 사용 */\n  xs: '4px',\n  /** 카드, 드롭다운, 배너, 일반 버튼에 기본적인 둥근 스타일을 적용할 때 사용 */\n  s: '8px',\n  /** 중간 크기의 카드, 팝업, 모달에 부드러운 곡률을 적용할 때 사용 */\n  m: '12px',\n  /** 큰 모달, 프로필 이미지, 강조 영역에 둥근 효과를 줄 때 사용 */\n  l: '16px',\n  /** Hero Section과 같은 대형 UI 요소에 강한 둥근 효과를 적용할 때 사용 */\n  xl: '20px',\n  /** 아바타, 토글 버튼과 같은 완전한 원형 요소에 적용할 때 사용 */\n  full: '50%',\n} as const;\n\nexport type RadiusTokens = typeof radius;\n\nexport default radius;\n","/**\n * Shadow Design Tokens\n * 그림자는 적용된 UI의 높이(elevation)와 이동 방향, 가장자리 등에 대한 단서를 제공\n */\n\nexport const shadows = {\n  /** 높이 48px 이하의 작은 요소에 가벼운 깊이감을 줄 때 사용 - 아이콘, 버튼, 배지, 입력 필드, 체크박스 등 */\n  s: '0px 1px 8px rgba(0, 0, 0, 0.1)',\n  /** 너비 또는 높이가 48px ~ 200px 사이의 중간 크기 요소를 명확히 구분할 때 사용 - 카드, 모달, 드롭다운, 중간 크기 버튼 등 */\n  m: '0px 1px 16px rgba(0, 0, 0, 0.1)',\n  /** 너비 200px 이상 또는 화면 너비의 50% 이상을 초과하는 큰 요소, 또는 강조가 필요한 구성 요소에 사용 - 다이얼로그, 대형 카드 등 */\n  l: '0px 1px 24px rgba(0, 0, 0, 0.12)',\n} as const;\n\nexport type ShadowTokens = typeof shadows;\n\nexport default shadows;\n","/**\n * Border Design Tokens\n * 컴포넌트에 테두리를 추가하여 구분감을 제공하는 속성\n */\n\n// Border Widths\nexport const borderWidth = {\n  /** UI 요소의 기본적인 구분감을 제공할 때 사용 */\n  s: '1px',\n  /** 1px보다 더 명확한 구분이 필요할 때 사용 */\n  m: '1.5px',\n  /** 중요한 요소를 강조하거나, 요소 간 강한 대비가 필요할 때 사용 */\n  l: '2px',\n} as const;\n\n// Border Styles\nexport const borderStyle = {\n  solid: 'solid',\n  dashed: 'dashed',\n  dotted: 'dotted',\n  none: 'none',\n} as const;\n\n// Combined Border Tokens\nexport const border = {\n  /** 기본 보더 - UI 요소의 기본적인 구분감 제공 */\n  s: `${borderWidth.s} ${borderStyle.solid}`,\n  /** 중간 보더 - 더 명확한 구분이 필요할 때 */\n  m: `${borderWidth.m} ${borderStyle.solid}`,\n  /** 큰 보더 - 중요한 요소 강조나 강한 대비가 필요할 때 */\n  l: `${borderWidth.l} ${borderStyle.solid}`,\n  /** 보더 없음 */\n  none: borderStyle.none,\n} as const;\n\n// All borders export\nexport const borders = {\n  borderWidth,\n  borderStyle,\n  border,\n} as const;\n\nexport default borders;\n","/**\n * Design Tokens Entry Point\n * 모든 디자인 토큰을 중앙에서 관리합니다\n */\n\n// Individual token exports\nexport { colors, primary, gray, coolGray, tint, semantic, illustration } from './colors';\nexport {\n  typography,\n  fontFamily,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  letterSpacing,\n  textStyles,\n} from './typography';\nexport { spacing } from './spacing';\nexport { radius } from './radius';\nexport { shadows } from './shadows';\nexport { borders } from './borders';\n\n// Combined tokens export\nexport const tokens = {\n  colors: () => import('./colors'),\n  typography: () => import('./typography'),\n  spacing: () => import('./spacing'),\n  radius: () => import('./radius'),\n  shadows: () => import('./shadows'),\n  borders: () => import('./borders'),\n} as const;\n\n// Re-export everything as default\nexport default {\n  colors: () => import('./colors'),\n  typography: () => import('./typography'),\n  spacing: () => import('./spacing'),\n  radius: () => import('./radius'),\n  shadows: () => import('./shadows'),\n  borders: () => import('./borders'),\n};\n","import React, { useCallback, useState } from 'react';\nimport { colors, fontWeight, textStyles } from '../../tokens';\nimport './Checkbox.css';\n\nexport interface CheckboxProps {\n  /** 체크박스가 선택되었는지 여부 */\n  checked?: boolean;\n  /** 체크박스가 비활성화되었는지 여부 */\n  disabled?: boolean;\n  /** 라벨 텍스트 */\n  label?: string;\n  /** 라벨 설명 텍스트 */\n  description?: string;\n  /** 라벨 위치 */\n  labelPosition?: 'right' | 'left';\n  /** 변경 이벤트 핸들러 */\n  onChange?: (checked: boolean) => void;\n  /** 클릭 이벤트 핸들러 */\n  onClick?: () => void;\n  /** 추가 CSS 클래스 */\n  className?: string;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({\n  checked = false,\n  disabled = false,\n  label,\n  description,\n  labelPosition = 'right',\n  onChange,\n  onClick,\n  className = '',\n}) => {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const checkboxSize = '24px';\n  const gap = '8px';\n\n  const getCheckboxStyles = (): React.CSSProperties => {\n    const baseStyles = {\n      width: checkboxSize,\n      height: checkboxSize,\n      borderRadius: '4px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      transition: 'all 0.2s ease',\n      position: 'relative' as const,\n    };\n\n    if (disabled && checked) {\n      // checked + disabled 상태: 내부 배경은 disabled.foreground, 아이콘은 white\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.semantic.disabled.foreground}`,\n        backgroundColor: colors.semantic.disabled.foreground,\n        cursor: 'not-allowed',\n      };\n    } else if (disabled) {\n      // disabled이지만 checked가 아닌 상태\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.semantic.disabled.foreground}`,\n        backgroundColor: colors.semantic.disabled.background,\n        cursor: 'not-allowed',\n      };\n    } else if (checked && isHovered) {\n      // checked + hover 상태: violet600\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.primary.tint.violet[600]}`,\n        backgroundColor: colors.primary.tint.violet[600],\n        cursor: 'pointer',\n      };\n    } else if (checked) {\n      // checked 상태: mainviolet\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.primary.mainviolet}`,\n        backgroundColor: colors.primary.mainviolet,\n        cursor: 'pointer',\n      };\n    } else if (isHovered) {\n      // hover 상태: coolgray 200\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.primary.coolGray[200]}`,\n        backgroundColor: colors.semantic.background.primary,\n        cursor: 'pointer',\n      };\n    } else {\n      // 기본 상태: coolgray 100\n      return {\n        ...baseStyles,\n        border: `2px solid ${colors.primary.coolGray[100]}`,\n        backgroundColor: colors.semantic.background.primary,\n        cursor: 'pointer',\n      };\n    }\n  };\n\n  const getIconColor = useCallback((): string => {\n    if (disabled && checked) {\n      // checked + disabled: white\n      return 'white';\n    } else if (disabled) {\n      // disabled이지만 checked가 아닌 상태 (아이콘이 보이지 않음)\n      return colors.semantic.disabled.foreground;\n    } else if (checked) {\n      // checked 상태: white\n      return 'white';\n    } else if (isHovered) {\n      // hover 상태: coolgray 200\n      return colors.primary.coolGray[200];\n    } else {\n      // 기본 상태: coolgray 100\n      return colors.primary.coolGray[100];\n    }\n  }, [checked, disabled, isHovered]);\n\n  const getLabelStyles = (): React.CSSProperties => {\n    return {\n      ...textStyles.body1,\n      fontWeight: fontWeight.medium,\n      color: disabled ? colors.semantic.disabled.foreground : colors.primary.coolGray[800],\n      cursor: disabled ? 'not-allowed' : 'pointer',\n    };\n  };\n\n  const getDescriptionStyles = (): React.CSSProperties => {\n    return {\n      ...textStyles.body2,\n      fontWeight: fontWeight.regular,\n      color: disabled ? colors.semantic.disabled.foreground : colors.primary.coolGray[300],\n      lineHeight: '1.3',\n      marginTop: '2px',\n      cursor: disabled ? 'not-allowed' : 'pointer',\n    };\n  };\n\n  const handleChange = () => {\n    if (!disabled) {\n      onChange?.(!checked);\n      onClick?.();\n    }\n  };\n\n  const handleMouseEnter = () => {\n    if (!disabled) {\n      setIsHovered(true);\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (!disabled) {\n      setIsHovered(false);\n    }\n  };\n\n  const containerStyles: React.CSSProperties = {\n    display: 'flex',\n    alignItems: description ? 'flex-start' : 'center',\n    gap: gap,\n    flexDirection: labelPosition === 'left' ? 'row-reverse' : 'row',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n  };\n\n  const labelContainerStyles: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    flex: 1,\n  };\n\n  // 현재 상태에 따른 아이콘 색상을 미리 계산\n  const iconColor = getIconColor();\n\n  // Check icon SVG\n  const CheckIcon = () => (\n    <svg width=\"14\" height=\"12\" viewBox=\"0 0 14 12\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fill={iconColor}\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.3821 0.997823C13.7285 1.30089 13.7636 1.82736 13.4605 2.17372L5.80428 10.9237C5.64699 11.1035 5.42012 11.2071 5.18127 11.2083C4.94241 11.2095 4.71453 11.1081 4.55546 10.9299L0.545044 6.43733C0.238554 6.09399 0.268427 5.56719 0.611766 5.2607C0.955106 4.95421 1.4819 4.98409 1.78839 5.32743L5.17089 9.11661L12.2062 1.07622C12.5093 0.729853 13.0358 0.694755 13.3821 0.997823Z\"\n      />\n    </svg>\n  );\n\n  return (\n    <div\n      className={`youth-checkbox ${className}`}\n      style={containerStyles}\n      onClick={handleChange}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <input\n        type=\"checkbox\"\n        checked={checked}\n        disabled={disabled}\n        onChange={() => {}} // onChange는 부모 컴포넌트의 onClick으로 처리\n        style={{ display: 'none' }}\n      />\n\n      <div style={getCheckboxStyles()}>\n        <CheckIcon />\n      </div>\n\n      {(label || description) && (\n        <div style={labelContainerStyles}>\n          {label && <span style={getLabelStyles()}>{label}</span>}\n          {description && <span style={getDescriptionStyles()}>{description}</span>}\n        </div>\n      )}\n    </div>\n  );\n};\n"]}